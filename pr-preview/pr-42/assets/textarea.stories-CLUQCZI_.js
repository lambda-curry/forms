import{j as s}from"./jsx-runtime-CQsLhzk5.js";import{n as N,l as k,m as D,e as I,f as S,h as _,b as E,k as V,z as b,w as v,u as O,a as L,R as M,B as q,g as $,t as g}from"./remix-stub-UXp-yz1T.js";import{r as F}from"./index-Wp2u197Z.js";import{a as P,b as H,F as K,c as z}from"./form-C1Hedwuh.js";import{e as m,u as r}from"./index-BvTlRpDL.js";import"./index-BB6wrN1E.js";const l=F.forwardRef(({className:e,...t},a)=>s.jsx("textarea",{className:N("flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",e),ref:a,...t}));l.displayName="Textarea";l.__docgenInfo={description:"",methods:[],displayName:"Textarea"};const c=F.forwardRef(({control:e,name:t,label:a,description:i,className:B,components:o,...R},j)=>s.jsx(k,{control:e,name:t,render:({field:u,fieldState:x})=>s.jsxs(D,{className:B,ref:j,children:[a&&s.jsx(I,{Component:o==null?void 0:o.FormLabel,children:a}),s.jsx(S,{Component:o==null?void 0:o.FormControl,children:s.jsx(l,{...u,...R,ref:u.ref})}),i&&s.jsx(_,{Component:o==null?void 0:o.FormDescription,children:i}),x.error&&s.jsx(E,{Component:o==null?void 0:o.FormMessage,children:x.error.message})]})}));c.displayName="TextareaField";c.__docgenInfo={description:"",methods:[],displayName:"TextareaField",props:{control:{required:!1,tsType:{name:"Control",elements:[{name:"TFieldValues"}],raw:"Control<TFieldValues>"},description:""},name:{required:!0,tsType:{name:"TName"},description:""},label:{required:!1,tsType:{name:"string"},description:""},description:{required:!1,tsType:{name:"string"},description:""},components:{required:!1,tsType:{name:"Partial",elements:[{name:"FieldComponents"}],raw:"Partial<FieldComponents>"},description:""}},composes:["Omit"]};function d(e){const{control:t}=V(),a={FormControl:P,FormLabel:H,FormDescription:K,FormMessage:z};return s.jsx(c,{control:t,components:a,...e})}d.__docgenInfo={description:"",methods:[],displayName:"Textarea"};const h=b.object({comment:b.string().min(10,"Comment must be at least 10 characters")}),T="Initial comment text",w="blocked_content",C="This content is not allowed",A=()=>{var a;const e=O(),t=L({resolver:g(h),defaultValues:{comment:T},fetcher:e,submitConfig:{action:"/",method:"post"}});return s.jsx(M,{...t,children:s.jsxs(e.Form,{onSubmit:t.handleSubmit,children:[s.jsx(d,{name:"comment",label:"Comment",description:"Enter your comment (minimum 10 characters)"}),s.jsx(q,{type:"submit",className:"mt-4",children:"Submit"}),((a=e.data)==null?void 0:a.message)&&s.jsx("p",{className:"mt-2 text-green-600",children:e.data.message})]})})},G=async e=>{const{errors:t,data:a,receivedValues:i}=await $(e,g(h));return t?{defaultValues:i}:a.comment.includes(w)?{errors:{comment:{type:"manual",message:C}},defaultValues:i}:{message:"Comment submitted successfully"}},se={title:"RemixHookForm/Textarea",component:d,parameters:{layout:"centered"},tags:["autodocs"],decorators:[v({root:{Component:A,action:async({request:e})=>G(e)}})]},J=({canvas:e})=>{const t=e.getByRole("textbox");m(t).toHaveValue(T)},Q=async({canvas:e})=>{const t=e.getByRole("textbox"),a=e.getByRole("button",{name:"Submit"});await r.click(t),await r.clear(t),await r.type(t,"short"),await r.click(a),await m(e.findByText("Comment must be at least 10 characters")).resolves.toBeInTheDocument()},U=async({canvas:e})=>{const t=e.getByRole("textbox"),a=e.getByRole("button",{name:"Submit"});await r.click(t),await r.clear(t),await r.type(t,w),await r.click(a),await m(e.findByText(C)).resolves.toBeInTheDocument()},W=async({canvas:e})=>{const t=e.getByRole("textbox"),a=e.getByRole("button",{name:"Submit"});await r.click(t),await r.clear(t),await r.type(t,"This is a valid comment that is long enough"),await r.click(a),await m(e.findByText("Comment submitted successfully")).resolves.toBeInTheDocument()},n={play:async e=>{J(e),await Q(e),await U(e),await W(e)}};var p,f,y;n.parameters={...n.parameters,docs:{...(p=n.parameters)==null?void 0:p.docs,source:{originalSource:`{
  play: async storyContext => {
    testDefaultValues(storyContext);
    await testInvalidSubmission(storyContext);
    await testBlockedContent(storyContext);
    await testValidSubmission(storyContext);
  }
}`,...(y=(f=n.parameters)==null?void 0:f.docs)==null?void 0:y.source}}};const oe=["Tests"];export{n as Tests,oe as __namedExportsOrder,se as default};

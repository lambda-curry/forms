import{r as i}from"./index-Wp2u197Z.js";import{j as z}from"./jsx-runtime-CQsLhzk5.js";function g(e,s=[]){let t=[];function r(c,u){const n=i.createContext(u),f=t.length;t=[...t,u];const a=d=>{var C;const{scope:S,children:l,...h}=d,x=((C=S==null?void 0:S[e])==null?void 0:C[f])||n,v=i.useMemo(()=>h,Object.values(h));return z.jsx(x.Provider,{value:v,children:l})};a.displayName=c+"Provider";function b(d,S){var x;const l=((x=S==null?void 0:S[e])==null?void 0:x[f])||n,h=i.useContext(l);if(h)return h;if(u!==void 0)return u;throw new Error(`\`${d}\` must be used within \`${c}\``)}return[a,b]}const o=()=>{const c=t.map(u=>i.createContext(u));return function(n){const f=(n==null?void 0:n[e])||c;return i.useMemo(()=>({[`__scope${e}`]:{...n,[e]:f}}),[n,f])}};return o.scopeName=e,[r,y(o,...s)]}function y(...e){const s=e[0];if(e.length===1)return s;const t=()=>{const r=e.map(o=>({useScope:o(),scopeName:o.scopeName}));return function(c){const u=r.reduce((n,{useScope:f,scopeName:a})=>{const d=f(c)[`__scope${a}`];return{...n,...d}},{});return i.useMemo(()=>({[`__scope${s.scopeName}`]:u}),[u])}};return t.scopeName=s.scopeName,t}function R(e,s,{checkForDefaultPrevented:t=!0}={}){return function(o){if(e==null||e(o),t===!1||!o.defaultPrevented)return s==null?void 0:s(o)}}function p(e){const s=i.useRef(e);return i.useEffect(()=>{s.current=e}),i.useMemo(()=>(...t)=>{var r;return(r=s.current)==null?void 0:r.call(s,...t)},[])}function $({prop:e,defaultProp:s,onChange:t=()=>{}}){const[r,o]=m({defaultProp:s,onChange:t}),c=e!==void 0,u=c?e:r,n=p(t),f=i.useCallback(a=>{if(c){const d=typeof a=="function"?a(e):a;d!==e&&n(d)}else o(a)},[c,e,o,n]);return[u,f]}function m({defaultProp:e,onChange:s}){const t=i.useState(e),[r]=t,o=i.useRef(r),c=p(s);return i.useEffect(()=>{o.current!==r&&(c(r),o.current=r)},[r,o,c]),t}var P=globalThis!=null&&globalThis.document?i.useLayoutEffect:()=>{};function j(e){const[s,t]=i.useState(void 0);return P(()=>{if(e){t({width:e.offsetWidth,height:e.offsetHeight});const r=new ResizeObserver(o=>{if(!Array.isArray(o)||!o.length)return;const c=o[0];let u,n;if("borderBoxSize"in c){const f=c.borderBoxSize,a=Array.isArray(f)?f[0]:f;u=a.inlineSize,n=a.blockSize}else u=e.offsetWidth,n=e.offsetHeight;t({width:u,height:n})});return r.observe(e,{box:"border-box"}),()=>r.unobserve(e)}else t(void 0)},[e]),s}export{$ as a,R as b,g as c,j as d,p as e,P as u};

{
  "name": "controlled-currency-input",
  "type": "registry:ui",
  "description": "A currency-input component with react-hook-form integration",
  "dependencies": [
    "react-hook-form"
  ],
  "registryDependencies": [
    "currency-input"
  ],
  "files": [
    {
      "name": "controlled-currency-input.tsx",
      "content": "import type * as React from 'react';\nimport {\n  Controller,\n  type ControllerProps,\n  type FieldValues,\n  type Path,\n  type RegisterOptions,\n  useFormContext,\n} from 'react-hook-form';\nimport { CurrencyInput, type CurrencyInputProps } from '../ui/CurrencyInput';\n\nexport type ControlledCurrencyInputProps<T extends FieldValues> = CurrencyInputProps &\n  Omit<ControllerProps, 'render' | 'control'> & {\n    name: Path<T>;\n  };\n\nexport const ControlledCurrencyInput = <T extends FieldValues>({\n  name,\n  rules,\n  ...props\n}: ControlledCurrencyInputProps<T>) => {\n  const { control } = useFormContext<T>();\n\n  return (\n    <Controller<T>\n      control={control}\n      name={name}\n      rules={rules as Omit<RegisterOptions<T, Path<T>>, 'disabled' | 'valueAsNumber' | 'valueAsDate' | 'setValueAs'>}\n      render={({ field }) => {\n        return (\n          <CurrencyInput\n            {...field}\n            {...props}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              field.onChange(e.target.value.replace(/[^0-9.-]+/g, ''));\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\n"
    }
  ]
}